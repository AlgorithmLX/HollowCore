buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10'
    }
}
plugins {
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.7.10"
}
apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

group = 'ru.hollowhorizon'
version = '1.0'
archivesBaseName = 'hc'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

configurations {
    implementation.extendsFrom(shade)
}

minecraft {
    mappings channel: 'official', version: '1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=hc.mixins.json"
            mods { hollowcore { source sourceSets.main } }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=hc.mixins.json"
            mods { hollowcore { source sourceSets.main } }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'hollowcore', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods { hollowcore { source sourceSets.main } }
        }
    }
}

mixin {
    add sourceSets.main, "hc.refmap.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    flatDir { dirs 'libs' }
}

dependencies {
    annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.29'

    shade 'uk.co.caprica:vlcj:4.7.3'

    shade 'org.jetbrains:annotations:23.0.0'

    shade "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.10"
    shade "org.jetbrains.kotlin:kotlin-reflect:1.7.10"

    implementation fg.deobf('dev.latian.mods:itemfilters:1605.2.5')
    implementation fg.deobf('dev.latian.mods:ftblibrary:1605.3.4')
    implementation fg.deobf('dev.latian.mods:ftbquests:1605.3.6')
    implementation fg.deobf('dev.latian.mods:ftbteams:1605.2.3')
    implementation fg.deobf('me.shedaniel:architectury:1.30.53')
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

    from sourceSets.main.output

    exclude()

    from { configurations.shade.collect { it.isDirectory() ? it : zipTree(it) } }

    manifest {
        attributes([
                "Specification-Title"     : "hollowstory",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy('reobfJar')
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = Arrays.asList("-Xjvm-default=all", "-Xopt-in=kotlin.RequiresOptIn")
        jvmTarget = "1.8"
        languageVersion = "1.4"
    }
}

jar.finalizedBy('reobfJar')

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}